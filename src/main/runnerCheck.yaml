name: runnerCheck
type: atom
bindDescription: "`Check environment: '${runnerName}'`"
needData: ['runnerName']
allowResults: ['running', 'available']
inlineJS: >
  const runnerName = this.data.runnerName;
  const running = !!this.allRunners.getRunnerByName(runnerName);
  const available = this.allData && this.allData.envs.map(v => v.name).includes(runnerName);

  await this.log({ text: `Environment check: '${runnerName}'. Running: ${running}. Available: ${available}` });

  return { running, available }

